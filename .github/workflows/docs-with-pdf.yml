name: Build Documentation and Generate PDFs

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Install Node.js dependencies
      run: npm install
        
    - name: Build documentation
      run: mkdocs build
      
    - name: Start local server and generate PDFs
      run: |
        # 백그라운드에서 간단한 HTTP 서버 시작
        cd site
        python -m http.server 8000 &
        SERVER_PID=$!
        cd ..
        
        # 서버 준비 대기
        sleep 5
        
        # PDF 생성
        node scripts/generate-pdf.js --base-url http://localhost:8000
        
        # 서버 종료
        kill $SERVER_PID
        
    - name: Copy PDFs to site directory
      run: |
        mkdir -p site/downloads
        cp -r pdf-output/* site/downloads/
        
    - name: Create download page
      run: |
        cat > site/downloads/index.html << 'EOF'
        <!DOCTYPE html>
        <html>
        <head>
            <meta charset="utf-8">
            <title>KEA Yocto Project PDF 다운로드</title>
            <style>
                body { font-family: 'Noto Sans KR', sans-serif; margin: 40px; }
                .header { color: #1976d2; margin-bottom: 30px; }
                .pdf-list { list-style: none; padding: 0; }
                .pdf-item { 
                    margin: 10px 0; 
                    padding: 15px; 
                    border: 1px solid #e0e0e0; 
                    border-radius: 8px;
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                }
                .pdf-link { 
                    text-decoration: none; 
                    color: #1976d2; 
                    font-weight: 500;
                }
                .pdf-size { color: #666; font-size: 0.9em; }
                .download-btn {
                    background: #1976d2;
                    color: white;
                    padding: 8px 16px;
                    border: none;
                    border-radius: 4px;
                    text-decoration: none;
                    font-size: 0.9em;
                }
            </style>
        </head>
        <body>
            <h1 class="header">📚 KEA Yocto Project PDF 다운로드</h1>
            <p>강의 자료를 PDF 형태로 다운로드할 수 있습니다.</p>
            
            <h2>📖 전체 강의 자료</h2>
            <ul class="pdf-list">
                <li class="pdf-item">
                    <div>
                        <a href="yocto-lecture-complete.pdf" class="pdf-link">
                            KEA Yocto Project 5.0 LTS 강의 - 전체 문서
                        </a>
                        <div class="pdf-size">모든 강의 내용을 하나의 PDF로</div>
                    </div>
                    <a href="yocto-lecture-complete.pdf" class="download-btn">다운로드</a>
                </li>
            </ul>
            
            <h2>📑 개별 강의 자료</h2>
            <ul class="pdf-list">
        EOF
        
        # PDF 파일 목록 자동 생성
        for pdf in pdf-output/*.pdf; do
            if [[ "$pdf" != *"complete"* ]] && [[ -f "$pdf" ]]; then
                filename=$(basename "$pdf")
                title=$(echo "$filename" | sed 's/\.pdf$//' | sed 's/-/ /g')
                echo "                <li class=\"pdf-item\">" >> site/downloads/index.html
                echo "                    <div>" >> site/downloads/index.html
                echo "                        <a href=\"$filename\" class=\"pdf-link\">$title</a>" >> site/downloads/index.html
                echo "                    </div>" >> site/downloads/index.html
                echo "                    <a href=\"$filename\" class=\"download-btn\">다운로드</a>" >> site/downloads/index.html
                echo "                </li>" >> site/downloads/index.html
            fi
        done
        
        cat >> site/downloads/index.html << 'EOF'
            </ul>
            
            <hr style="margin: 40px 0;">
            <p><a href="../">← 메인 사이트로 돌아가기</a></p>
        </body>
        </html>
        EOF
      
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: ./site

  deploy:
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4 