name: Build and Push Docker Image

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, master ]

env:
  # 보안 옵션 1: GitHub Container Registry (권장)
  GHCR_REGISTRY: ghcr.io
  # 보안 옵션 2: Docker Hub (기존)
  DOCKERHUB_REGISTRY: docker.io
  IMAGE_NAME: yocto-lecture

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write  # GitHub Container Registry용
      id-token: write  # OIDC용

    steps:
    - name: 📋 Checkout repository
      uses: actions/checkout@v4

    - name: 🔍 Environment Debug Info
      run: |
        echo "=== 🐳 Docker Environment ==="
        docker --version
        docker info
        echo ""
        echo "=== 📦 Build Context ==="
        echo "Event: ${{ github.event_name }}"
        echo "Ref: ${{ github.ref }}"
        echo "SHA: ${{ github.sha }}"
        echo "Actor: ${{ github.actor }}"
        echo ""
        echo "=== 🔐 Registry Info ==="
        echo "GHCR Registry: ${{ env.GHCR_REGISTRY }}"
        echo "Docker Hub Registry: ${{ env.DOCKERHUB_REGISTRY }}"
        echo "Image Name: ${{ env.IMAGE_NAME }}"

    - name: 🔧 Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: 🔐 Log in to GitHub Container Registry (보안 권장)
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: ${{ env.GHCR_REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}  # 자동 생성, 별도 설정 불필요

    - name: 🔑 Log in to Docker Hub (선택사항)
      if: github.event_name != 'pull_request' && secrets.DOCKERHUB_TOKEN != ''
      id: docker-login
      uses: docker/login-action@v3
      with:
        registry: ${{ env.DOCKERHUB_REGISTRY }}
        username: jabang3
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: ✅ Verify Docker Login
      if: github.event_name != 'pull_request'
      run: |
        echo "=== 🔍 Docker Login Verification ==="
        docker info | grep -i "username\|registry" || echo "Login info not available"
        echo "✅ Registry login completed"

    - name: 🏷️ Extract metadata for GHCR
      id: meta-ghcr
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.GHCR_REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=raw,value=5.0-lts
          type=raw,value=latest,enable={{is_default_branch}}

    - name: 🏷️ Extract metadata for Docker Hub
      id: meta-dockerhub
      if: secrets.DOCKERHUB_TOKEN != ''
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.DOCKERHUB_REGISTRY }}/jabang3/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=raw,value=5.0-lts
          type=raw,value=latest,enable={{is_default_branch}}

    - name: 📋 Display Build Info
      run: |
        echo "=== 🏗️ Build Information ==="
        echo "GHCR Tags:"
        echo "${{ steps.meta-ghcr.outputs.tags }}"
        echo ""
        if [ "${{ secrets.DOCKERHUB_TOKEN }}" != "" ]; then
          echo "Docker Hub Tags:"
          echo "${{ steps.meta-dockerhub.outputs.tags }}"
        else
          echo "Docker Hub: 토큰 없음 - GHCR만 사용"
        fi
        echo ""
        echo "Will push: ${{ github.event_name != 'pull_request' }}"

    - name: 🏗️ Build and push to GHCR (보안 권장)
      id: build-ghcr
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta-ghcr.outputs.tags }}
        labels: ${{ steps.meta-ghcr.outputs.labels }}
        build-args: |
          UBUNTU_VERSION=24.04
          TARGETPLATFORM=linux/amd64
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: 🏗️ Build and push to Docker Hub (선택사항)
      id: build-dockerhub
      if: github.event_name != 'pull_request' && secrets.DOCKERHUB_TOKEN != ''
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta-dockerhub.outputs.tags }}
        labels: ${{ steps.meta-dockerhub.outputs.labels }}
        build-args: |
          UBUNTU_VERSION=24.04
          TARGETPLATFORM=linux/amd64
        cache-from: type=gha

    - name: 📊 Build Summary
      run: |
        echo "=== 📊 Build Results ==="
        echo "GHCR Image ID: ${{ steps.build-ghcr.outputs.imageid }}"
        echo "GHCR Image Digest: ${{ steps.build-ghcr.outputs.digest }}"
        if [ "${{ secrets.DOCKERHUB_TOKEN }}" != "" ]; then
          echo "Docker Hub Image ID: ${{ steps.build-dockerhub.outputs.imageid }}"
          echo "Docker Hub Image Digest: ${{ steps.build-dockerhub.outputs.digest }}"
        fi

    - name: 🧪 Test Docker image
      if: github.event_name != 'pull_request'
      run: |
        echo "=== 🧪 Testing Docker Image ==="
        
        # GHCR 이미지 테스트
        GHCR_IMAGE="${{ env.GHCR_REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:latest"
        echo "🔍 Testing GHCR image: $GHCR_IMAGE"
        
        docker run --rm $GHCR_IMAGE cat /etc/os-release
        docker run --rm $GHCR_IMAGE bash -c "
          source /opt/poky/oe-init-build-env /tmp/test && 
          bitbake --version
        "
        
        echo "✅ Docker image test completed successfully!"

    - name: 📈 Post-build Status
      if: always()
      run: |
        echo "=== 📈 Final Status ==="
        echo "Job Status: ${{ job.status }}"
        echo "Steps Status:"
        echo "- GHCR Build: ${{ steps.build-ghcr.conclusion || 'skipped' }}"
        echo "- Docker Hub Build: ${{ steps.build-dockerhub.conclusion || 'skipped' }}"
        echo ""
        if [ "${{ job.status }}" = "success" ]; then
          echo "🎉 Build completed successfully!"
          echo "GHCR Image: ${{ env.GHCR_REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:5.0-lts"
          if [ "${{ secrets.DOCKERHUB_TOKEN }}" != "" ]; then
            echo "Docker Hub Image: ${{ env.DOCKERHUB_REGISTRY }}/jabang3/${{ env.IMAGE_NAME }}:5.0-lts"
          fi
        else
          echo "❌ Build failed. Check the logs above for details."
        fi

    - name: 🚨 Failure Notification
      if: failure()
      run: |
        echo "=== 🚨 Build Failure Debug ==="
        echo "Failed step: ${{ github.action }}"
        echo "Repository: ${{ github.repository }}"
        echo "Workflow: ${{ github.workflow }}"
        echo "Run ID: ${{ github.run_id }}"
        echo "Run URL: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
        echo ""
        echo "💡 Common fixes:"
        echo "1. GHCR 사용시 별도 토큰 설정 불필요 (GITHUB_TOKEN 자동 사용)"
        echo "2. Docker Hub 사용시 DOCKERHUB_TOKEN secret 확인"
        echo "3. Repository settings > Actions > General > Workflow permissions 확인" 