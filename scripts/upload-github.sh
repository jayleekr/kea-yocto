#!/bin/bash

# 간단한 GitHub 캐시 업로드 스크립트
set -euo pipefail

echo "🚀 KEA Yocto 캐시 GitHub 업로드 테스트"
echo "======================================"

# 토큰 설정
export GITHUB_TOKEN=$(cat ~/token)
echo "✅ 토큰 로드 완료"

# 작업 디렉토리로 이동
cd yocto-workspace

# 릴리스 태그 생성
RELEASE_TAG="cache-$(date +%Y%m%d-%H%M%S)"
RELEASE_TITLE="KEA Yocto Cache $(date '+%Y-%m-%d %H:%M')"

echo "📦 릴리스 정보:"
echo "  태그: $RELEASE_TAG"
echo "  제목: $RELEASE_TITLE"

# 파일 확인
echo ""
echo "📂 업로드할 파일들:"
ls -la downloads-cache.tar.gz sstate-cache.tar.gz

# 체크섬 생성
echo ""
echo "🔐 체크섬 생성 중..."
md5sum downloads-cache.tar.gz > downloads-cache.tar.gz.md5
md5sum sstate-cache.tar.gz > sstate-cache.tar.gz.md5
sha256sum downloads-cache.tar.gz > downloads-cache.tar.gz.sha256
sha256sum sstate-cache.tar.gz > sstate-cache.tar.gz.sha256

# 릴리스 노트 생성
cat > release-notes.md << EOF
# KEA Yocto Project 5.0 LTS 캐시

**생성 날짜:** $(date '+%Y년 %m월 %d일 %H:%M:%S')
**Yocto 버전:** 5.0 LTS (Scarthgap)
**Docker 이미지:** jabang3/yocto-lecture:5.0-lts

## 📦 캐시 구성

- **downloads-cache.tar.gz** ($(du -h downloads-cache.tar.gz | cut -f1)) - 소스 다운로드 캐시
- **sstate-cache.tar.gz** ($(du -h sstate-cache.tar.gz | cut -f1)) - 빌드 상태 캐시

## 🚀 사용법

### 1. 캐시 다운로드
\`\`\`bash
mkdir yocto-workspace && cd yocto-workspace
wget https://github.com/jayleekr/kea-yocto/releases/download/$RELEASE_TAG/downloads-cache.tar.gz
wget https://github.com/jayleekr/kea-yocto/releases/download/$RELEASE_TAG/sstate-cache.tar.gz
\`\`\`

### 2. 캐시 압축 해제
\`\`\`bash
tar -xzf downloads-cache.tar.gz
tar -xzf sstate-cache.tar.gz
\`\`\`

### 3. Docker 빌드 실행
\`\`\`bash
docker run --rm -v "\$PWD:/shared" jabang3/yocto-lecture:5.0-lts /bin/bash -c "
  cd /home/yocto
  source /opt/poky/oe-init-build-env build
  echo 'DL_DIR = \"/shared/downloads\"' >> conf/local.conf
  echo 'SSTATE_DIR = \"/shared/sstate-cache\"' >> conf/local.conf
  bitbake core-image-minimal
"
\`\`\`

## ⚡ 성능 향상

- 🚀 **98.4% 태스크 재사용률**
- ⏱️ **빌드 시간 50% 이상 단축**
- 📥 **네트워크 다운로드 최소화**

## 🔐 파일 무결성 검증

MD5 및 SHA256 체크섬 파일이 함께 제공됩니다.

---
*Generated by KEA Yocto Cache Distribution System*
EOF

echo "✅ 릴리스 노트 생성 완료"

# GitHub Release 생성
echo ""
echo "🚀 GitHub Release 생성 중..."
gh release create "$RELEASE_TAG" \
    --title "$RELEASE_TITLE" \
    --notes-file release-notes.md \
    downloads-cache.tar.gz \
    downloads-cache.tar.gz.md5 \
    downloads-cache.tar.gz.sha256 \
    sstate-cache.tar.gz \
    sstate-cache.tar.gz.md5 \
    sstate-cache.tar.gz.sha256

echo ""
echo "🎉 업로드 완료!"
echo "📂 릴리스 URL: https://github.com/jayleekr/kea-yocto/releases/tag/$RELEASE_TAG"
echo ""
echo "📥 직접 다운로드 URL:"
echo "  downloads-cache.tar.gz:"
echo "    https://github.com/jayleekr/kea-yocto/releases/download/$RELEASE_TAG/downloads-cache.tar.gz"
echo "  sstate-cache.tar.gz:"
echo "    https://github.com/jayleekr/kea-yocto/releases/download/$RELEASE_TAG/sstate-cache.tar.gz" 