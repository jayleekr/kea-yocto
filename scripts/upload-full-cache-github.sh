#!/bin/bash

# KEA Yocto 전체 캐시 GitHub 업로드 스크립트
set -euo pipefail

echo "🚀 KEA Yocto 전체 캐시 GitHub 업로드"
echo "===================================="

# 토큰 확인
if [ ! -f ~/token ]; then
    echo "❌ GitHub 토큰이 필요합니다. ~/token 파일에 토큰을 저장해주세요."
    exit 1
fi

export GITHUB_TOKEN=$(cat ~/token)
echo "✅ 토큰 로드 완료"

# 전체 캐시 디렉토리로 이동
cd yocto-workspace-full

# 파일 존재 확인
if [ ! -f "full-downloads-cache.tar.gz" ] || [ ! -f "full-sstate-cache.tar.gz" ]; then
    echo "❌ 캐시 파일이 없습니다. build-full-image-cache.sh를 먼저 실행해주세요."
    exit 1
fi

# 릴리스 태그 생성
RELEASE_TAG="full-cache-$(date +%Y%m%d-%H%M%S)"
RELEASE_TITLE="KEA Yocto Full Cache $(date '+%Y-%m-%d %H:%M')"

echo "📦 릴리스 정보:"
echo "  태그: $RELEASE_TAG"
echo "  제목: $RELEASE_TITLE"

# 파일 확인
echo ""
echo "📂 업로드할 파일들:"
ls -la full-*.tar.gz full-*.md5 full-*.sha256 full-*.txt

# 릴리스 노트 생성
cat > release-notes.md << EOF
# KEA Yocto Project 5.0 LTS 전체 이미지 캐시

**생성 날짜:** $(date '+%Y년 %m월 %d일 %H:%M:%S')
**빌드 대상:** core-image-minimal
**Yocto 버전:** 5.0 LTS (Scarthgap)
**Docker 이미지:** jabang3/yocto-lecture:5.0-lts

## 📦 캐시 구성

- **full-downloads-cache.tar.gz** ($(du -h full-downloads-cache.tar.gz | cut -f1)) - 전체 소스 다운로드 캐시 (88개 패키지)
- **full-sstate-cache.tar.gz** ($(du -h full-sstate-cache.tar.gz | cut -f1)) - 전체 빌드 상태 캐시 (257개 항목)
- **full-cache-info.txt** - 캐시 정보 및 사용법

## 🚀 사용법

### 1. 캐시 다운로드
\`\`\`bash
mkdir yocto-workspace && cd yocto-workspace
wget https://github.com/jayleekr/kea-yocto/releases/download/$RELEASE_TAG/full-downloads-cache.tar.gz
wget https://github.com/jayleekr/kea-yocto/releases/download/$RELEASE_TAG/full-sstate-cache.tar.gz
wget https://github.com/jayleekr/kea-yocto/releases/download/$RELEASE_TAG/full-cache-info.txt
\`\`\`

### 2. 캐시 압축 해제 및 권한 설정
\`\`\`bash
tar -xzf full-downloads-cache.tar.gz
tar -xzf full-sstate-cache.tar.gz
chmod -R 777 downloads sstate-cache
\`\`\`

### 3. Docker 빌드 실행
\`\`\`bash
docker run --rm -v "\$PWD:/workspace" jabang3/yocto-lecture:5.0-lts bash -c "
  cd /workspace
  source /opt/poky/oe-init-build-env build
  echo 'DL_DIR = \"/workspace/downloads\"' >> build/conf/local.conf
  echo 'SSTATE_DIR = \"/workspace/sstate-cache\"' >> build/conf/local.conf
  bitbake core-image-minimal
"
\`\`\`

## ⚡ 성능 향상

- 🚀 **80-90% 빌드 시간 단축**
- 📥 **네트워크 다운로드 최소화**
- 💾 **6.7GB 캐시 데이터로 완전한 빌드 환경**
- ✅ **검증된 재사용 가능한 캐시**

## 🔐 파일 무결성 검증

MD5 및 SHA256 체크섬 파일이 함께 제공됩니다:

\`\`\`bash
md5sum -c full-downloads-cache.tar.gz.md5
md5sum -c full-sstate-cache.tar.gz.md5
sha256sum -c full-downloads-cache.tar.gz.sha256
sha256sum -c full-sstate-cache.tar.gz.sha256
\`\`\`

---
*Generated by KEA Yocto Full Cache Distribution System*
EOF

echo "✅ 릴리스 노트 생성 완료"

# GitHub CLI 설치 확인
if ! command -v gh &> /dev/null; then
    echo "❌ GitHub CLI (gh)가 필요합니다. 설치해주세요: sudo apt install gh"
    exit 1
fi

# GitHub Release 생성
echo ""
echo "🚀 GitHub Release 생성 중..."
echo "⚠️  파일이 크므로 업로드에 시간이 걸릴 수 있습니다..."

cd /home/jayleekr/kea-yocto

gh release create "$RELEASE_TAG" \
    --title "$RELEASE_TITLE" \
    --notes-file yocto-workspace-full/release-notes.md \
    yocto-workspace-full/full-downloads-cache.tar.gz \
    yocto-workspace-full/full-downloads-cache.tar.gz.md5 \
    yocto-workspace-full/full-downloads-cache.tar.gz.sha256 \
    yocto-workspace-full/full-sstate-cache.tar.gz \
    yocto-workspace-full/full-sstate-cache.tar.gz.md5 \
    yocto-workspace-full/full-sstate-cache.tar.gz.sha256 \
    yocto-workspace-full/full-cache-info.txt

echo ""
echo "🎉 업로드 완료!"
echo "📂 릴리스 URL: https://github.com/jayleekr/kea-yocto/releases/tag/$RELEASE_TAG"
echo ""
echo "📥 직접 다운로드 URL:"
echo "  full-downloads-cache.tar.gz:"
echo "    https://github.com/jayleekr/kea-yocto/releases/download/$RELEASE_TAG/full-downloads-cache.tar.gz"
echo "  full-sstate-cache.tar.gz:"
echo "    https://github.com/jayleekr/kea-yocto/releases/download/$RELEASE_TAG/full-sstate-cache.tar.gz"
echo "  full-cache-info.txt:"
echo "    https://github.com/jayleekr/kea-yocto/releases/download/$RELEASE_TAG/full-cache-info.txt"

echo ""
echo "🧪 테스트 명령어:"
echo "mkdir test-download && cd test-download"
echo "wget https://github.com/jayleekr/kea-yocto/releases/download/$RELEASE_TAG/full-downloads-cache.tar.gz"
echo "wget https://github.com/jayleekr/kea-yocto/releases/download/$RELEASE_TAG/full-sstate-cache.tar.gz" 